<?php

namespace UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UtenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UtenteRepository extends EntityRepository
{
    
    public function insertUtente($em,$utente){
        
        $em->persist($utente);
        $em->flush();
        
    }
    
    public function deleteUtente($bundle,$idUtente){
        $em=$this->getDoctrine()->getManager();
        //nel find ci va il namespace della classe, Se l'id non corrisponde a nessuna tupla restituisce null
        $p=$em->find($bundle, $idUtente);

       $em->remove($p);
      
        $em->flush();
    }
    
    public function getUtenteById($em,$bundle,$idUtente){
       
        //nel find ci va il namespace della classe, Se l'id non corrisponde a nessuna tupla restituisce null
        $p=$em->find($bundle, $idUtente);
                
         return $p;
    }
    
    public function getAllUsers(){
        $users=$this->findAll();
        
        
       return $users;
    }
    public function selectUserWhere($username,$password){
        
       $utente= $this->findOneBy(array('username'=>$username,'password'=>$password));
       
       return $utente;
        
    }
    
    public function selectUserFromUname($username){
        $utente= $this->findOneBy(array('username'=>$username));
       
        return $utente;
    }
    
    
    public function selectUserAdminById($em,$idUtente){
             $connection = $em->getConnection();
            
            $statement = $connection->prepare("SELECT *
                                                                                FROM  (SELECT *
                                                                                                FROM utente_profilo
                                                                                                WHERE utente_id=$idUtente) up JOIN profilo p on up.profilo_id=p.id
                                                                                WHERE profiloUtente='admin'");
            
            $statement->execute();
           
            // result contiene tutte le opere inserite dall'utente con id = $idUtente
            $utente= $statement->fetchAll();
        
        return $utente;
        
    }
    public function searchIdByUnamePass($uname,$password){
        
        $utente=$this->findOneBy(array('username'=>$uname,'password'=>$password));
        return $utente->getId();
    }
    
    
   
   
}
